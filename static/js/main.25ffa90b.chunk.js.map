{"version":3,"sources":["components/Choices.js/Choices.js","components/Ingredients/Ingredients.js","components/Results/Results.js","App.js","reportWebVitals.js","index.js"],"names":["Choices","handleSubmit","choices","name","useState","Array","length","fill","checkedState","setCheckedState","class","className","map","index","type","id","value","checked","onChange","position","updatedCheckedState","item","handleOnChange","htmlFor","onClick","Ingredients","videoRef","useRef","photoRef","hasPhoto","setHasPhoto","useEffect","navigator","mediaDevices","getUserMedia","video","facingMode","then","stream","current","srcObject","play","catch","err","console","error","ingredients","setIngredients","classname","ref","height","width","photo","getContext","drawImage","dataUrl","toDataURL","log","Tesseract","recognize","logger","m","text","data","e","target","Results","selectedChoices","setData","loading","setLoading","setError","a","fetch","response","ok","Error","status","json","actualData","message","getData","choice","dairyIngredients","toString","addedSugarIngredients","shellfishIngredients","App","step","setStep","setSelectedChoices","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25ffa90b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Choices = ({ handleSubmit }) => {\r\n  const choices = [\r\n    {\r\n      name: \" Added Sugar\",\r\n    },\r\n    {\r\n      name: \" Dairy\",\r\n    },\r\n    {\r\n      name: \" Shellfish\",\r\n    },\r\n  ];\r\n  const [checkedState, setCheckedState] = useState(\r\n    new Array(choices.length).fill(false)\r\n  );\r\n\r\n  const handleOnChange = (position) => {\r\n    const updatedCheckedState = checkedState.map((item, index) =>\r\n      index === position ? !item : item\r\n    );\r\n\r\n    setCheckedState(updatedCheckedState);\r\n  };\r\n\r\n  return (\r\n    <div class=\"wrapper1\">\r\n      <div class=\"padding\">\r\n        <div class=\"listDiv\">\r\n          <h3>\r\n            <b>What should we look out for?</b>\r\n          </h3>\r\n          <hr class=\"solid\"></hr>\r\n          <ul className=\"choice-list\">\r\n            {choices.map(({ name }, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <div className=\"choices-list-item\">\r\n                    <div className=\"left-section\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id={`custom-checkbox-${index}`}\r\n                        name={name}\r\n                        value={name}\r\n                        checked={checkedState[index]}\r\n                        onChange={() => handleOnChange(index)}\r\n                      />\r\n                      <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\r\n                    </div>\r\n                  </div>\r\n                  <hr class=\"dashed\"></hr>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            handleSubmit(checkedState);\r\n          }}\r\n        >\r\n          Onto the scanning!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Choices;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport Tesseract from 'tesseract.js';\r\n\r\nfunction preprocessImage(canvas) {\r\n\tconst image = canvas\r\n\t\t.getContext('2d')\r\n\t\t.getImageData(0, 0, canvas.width, canvas.height);\r\n\tthresholdFilter(image.data, 0.5);\r\n\treturn image;\r\n}\r\n\r\n// from https://github.com/processing/p5.js/blob/main/src/image/filters.js\r\nfunction thresholdFilter(pixels, level) {\r\n\tif (level === undefined) {\r\n\t\tlevel = 0.5;\r\n\t}\r\n\tconst thresh = Math.floor(level * 255);\r\n\tfor (let i = 0; i < pixels.length; i += 4) {\r\n\t\tconst red = pixels[i];\r\n\t\tconst green = pixels[i + 1];\r\n\t\tconst blue = pixels[i + 2];\r\n\r\n\t\tconst gray = 0.2126 * red + 0.7152 * green + 0.0722 * blue;\r\n\t\tlet value;\r\n\t\tif (gray >= thresh) {\r\n\t\t\tvalue = 255;\r\n\t\t} else {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tpixels[i] = pixels[i + 1] = pixels[i + 2] = value;\r\n\t}\r\n}\r\n\r\nconst Ingredients = ({ handleSubmit }) => {\r\n\tconst videoRef = useRef(null);\r\n\tconst photoRef = useRef(null);\r\n\r\n\tconst [hasPhoto, setHasPhoto] = useState(false);\r\n\r\n\tconst getVideo = () => {\r\n\t\tnavigator.mediaDevices\r\n\t\t\t.getUserMedia({ video: { facingMode: 'environment' } })\r\n\t\t\t.then((stream) => {\r\n\t\t\t\tlet video = videoRef.current;\r\n\t\t\t\tvideo.srcObject = stream;\r\n\t\t\t\tvideo.play();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetVideo();\r\n\t}, [videoRef]);\r\n\r\n\tconst takePhoto = () => {\r\n\t\tconst width = 414;\r\n\t\tconst height = width / (16 / 9);\r\n\r\n\t\tlet video = videoRef.current;\r\n\t\tlet photo = photoRef.current;\r\n\r\n\t\tphoto.width = width;\r\n\t\tphoto.height = height;\r\n\r\n\t\t//const canvas = photoRef.current;\r\n\t\tlet ctx = photo.getContext('2d');\r\n\t\t//ctx.putImageData(preprocessImage(canvas), 0, 0);\r\n\t\t//const dataUrl = canvas.toDataURL(\"image/jpeg\");\r\n\r\n\t\tctx.drawImage(video, 0, 0, width, height);\r\n\t\tsetHasPhoto(true);\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\tlet photo = photoRef.current;\r\n\t\tconst dataUrl = photo.toDataURL();\r\n\t\tconsole.log(dataUrl);\r\n\r\n\t\tTesseract.recognize(dataUrl, 'eng', { logger: (m) => console.log(m) })\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t})\r\n\t\t\t.then(({ data: { text } }) => {\r\n\t\t\t\tconsole.log(text);\r\n\t\t\t\t//setIngredients(text);\r\n\t\t\t\thandleSubmit(text);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst [ingredients, setIngredients] = useState('');\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetIngredients(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div class='wrapper2'>\r\n\t\t\t<div class='padding'>\r\n\t\t\t\t<div classname='camera'>\r\n\t\t\t\t\t<video ref={videoRef}></video>\r\n\t\t\t\t\t<button class='submitBtn' onClick={takePhoto}>\r\n\t\t\t\t\t\tTake pic!\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={'result' + (hasPhoto ? 'hasPhoto' : '')}>\r\n\t\t\t\t\t<canvas ref={photoRef}></canvas>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button onClick={handleClick}> Convert </button>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tName:\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tvalue={ingredients}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\tvalue='Next'\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\thandleSubmit(ingredients);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Ingredients;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Results = ({ selectedChoices, ingredients }) => {\r\n  const API_URL = \"http://localhost:3001\";\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${API_URL}/api?ingredients=${ingredients}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\r\n            `This is an HTTP error: The status is ${response.status}`\r\n          );\r\n        }\r\n        let actualData = await response.json();\r\n        setData(actualData);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setData(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div class=\"wrapper3\">\r\n      <div class=\"padding\">\r\n        <h1>Results</h1>\r\n        {loading && <div>A moment please...</div>}\r\n        {error && (\r\n          <div>{`There is a problem fetching the post data - ${error}`}</div>\r\n        )}\r\n        {selectedChoices.map((choice) => {\r\n          if (choice.value && data.dairyIngredients && choice.name == \"dairy\") {\r\n            return (\r\n              <div class=\"ingredBox\">\r\n                <div>{choice.name}</div>\r\n                We found <b>{data.dairyIngredients.length}</b> ingredients\r\n                flagged as dairy!\r\n                {data.dairyIngredients.toString()}\r\n              </div>\r\n            );\r\n          } else if (\r\n            choice.value &&\r\n            data.addedSugarIngredients &&\r\n            choice.name == \"added sugar\"\r\n          ) {\r\n            return (\r\n              <p>\r\n                {choice.name}\r\n                We found {data.addedSugarIngredients.length} ingredients flagged\r\n                as added sugar!\r\n                {data.addedSugarIngredients.toString()}\r\n              </p>\r\n            );\r\n          } else if (\r\n            choice.value &&\r\n            data.shellfishIngredients &&\r\n            choice.name == \"shellfish\"\r\n          ) {\r\n            return (\r\n              <p>\r\n                {choice.name}\r\n                We found {data.shellfishIngredients.length} ingredients flagged\r\n                as shellfish!\r\n                {data.shellfishIngredients.toString()}\r\n              </p>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.scss\";\r\nimport Choices from \"./components/Choices.js/Choices\";\r\nimport Ingredients from \"./components/Ingredients\";\r\nimport Results from \"./components/Results\";\r\nimport \"./components/fonts.css\";\r\nimport \"../src/components/Ingredients/index.css\";\r\n\r\nconst App = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [selectedChoices, setSelectedChoices] = useState([]);\r\n  const [ingredients, setIngredients] = useState(\"\");\r\n\r\n  const handleSubmitChoices = (choices) => {\r\n    setStep(step + 1);\r\n    setSelectedChoices([\r\n      { name: \"added sugar\", value: choices[0] },\r\n      { name: \"dairy\", value: choices[1] },\r\n      { name: \"shellfish\", value: choices[2] },\r\n    ]);\r\n  };\r\n\r\n  const handleSubmitIngredients = (ingredients) => {\r\n    setStep(step + 1);\r\n    setIngredients(ingredients);\r\n  };\r\n\r\n  if (step == 1) {\r\n    return <Choices handleSubmit={handleSubmitChoices} />;\r\n  } else if (step == 2) {\r\n    return <Ingredients handleSubmit={handleSubmitIngredients} />;\r\n  } else {\r\n    return (\r\n      <Results selectedChoices={selectedChoices} ingredients={ingredients} />\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}